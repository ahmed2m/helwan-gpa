{"version":3,"sources":["App_function.js","serviceWorker.js","index.js"],"names":["uuid","require","Prev","props","react_default","a","createElement","Card","Label","style","marginRight","Input","type","min","onChange","e","data","gpa","value","handlePrevGPA","marginLeft","handleprevHours","Number","SubjectList","_useState13","useState","subjects","_useState14","Object","slicedToArray","setSubjects","handleChange","attrs","newSubjects","map","subject","key","assign","grade","subjectGPA","checked","handleRemove","subId","filter","s","useEffect","hours","score","credit","calc","onHours","all","App_function_Subject","id","onSubjectChange","onSubjectRemove","className","App_function_NewSubject","onSubmit","v4","concat","toConsumableArray","grades","text","Subject","state","componentDidMount","_this","setState","form","handleGradeChange","_ref","handleCheck","Fragment","Checkbox","label","padding","onClick","this","Dropdown","placeholder","fluid","selection","options","Content","extra","Button","floated","icon","color","inverted","React","Component","NewSubject","App","_useState","_useState2","PrevGPA","setPrevGPA","_useState3","_useState4","PrevHours","setPrevHours","_useState5","_useState6","CurHours","setCurHours","_useState7","_useState8","Hours","setHours","_useState9","_useState10","CurTermGPA","setCurTermGPA","_useState11","_useState12","Cumulative","setCumulative","Header","as","textAlign","dividing","App_function_Prev","toFixed","App_function_SubjectList","currentGPA","paddingTop","Segment","href","rel","target","Icon","name","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_function","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5e5f488f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Label, Card, Icon, Segment, Dropdown, Checkbox, Header, Button, Input} from \"semantic-ui-react\";\nvar uuid = require('uuid');\n\nconst App = (props) =>{\n    const [PrevGPA, setPrevGPA] = useState(0);\n    const [PrevHours, setPrevHours] = useState(0);\n    const [CurHours, setCurHours] = useState(0);\n    const [Hours, setHours] = useState(0);\n    const [CurTermGPA, setCurTermGPA] = useState(0);\n    const [Cumulative, setCumulative] = useState(0);\n    \n    useEffect(()=> {handleCumChange()});\n\n    function handlePrevGPA(PrevGPA) {\n        setPrevGPA(PrevGPA);\n    };\n\n    function handlePrevHours(PrevHours) {\n        setPrevHours(PrevHours);\n    };\n\n    function handleChange(currentGPA) {\n        setCurTermGPA(currentGPA);\n    };\n\n    function handleHours(hours) {\n        hours=Number(hours);\n        setCurHours(hours);\n        setHours(PrevHours+hours);\n    };\n\n    function handleCumChange() {\n        let prevgrade = PrevGPA * PrevHours;\n        let curgrade = CurTermGPA * CurHours;\n        setCumulative((prevgrade+curgrade)/Hours);\n    };\n    return (\n        <div className='ui main'>\n            <Header as='h1' textAlign='center'  style={{padding:'10px'}} dividing >\n                Helwan GPA Calculator\n            </Header>\n            <Prev\n                handlePrevGPA = {handlePrevGPA}\n                handleprevHours = {handlePrevHours}\n            />\n            <div className=\"info\">\n                <b>Current Term GPA : {CurTermGPA?CurTermGPA.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Cumulative GPA : {Cumulative?Cumulative.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Hours : {Hours} </b>\n            </div>\n            <SubjectList\n                subjects = {props.subjects}\n                onChange = {handleChange}\n                onHours = {handleHours}\n            />\n\n            <footer style={{paddingTop:'30px'}}>\n                <Segment as='a' href={'http://github.com/ahmeed2m'} rel=\"noreferrer\" target=\"_blank\">\n                    Show some love on <Icon name='github'/>\n                </Segment>\n                <Segment as='a' href={'http://fb.com/ahmeed2m'} rel=\"noreferrer\" target=\"_blank\">\n                    Made By Mohamadeen\n                </Segment>\n            </footer>\n        </div>\n    );\n}\n\nconst Prev = (props) =>{\n    function handlePrevGPA(e,data){\n        let gpa=data.value\n        if(gpa>0){\n            props.handlePrevGPA(gpa);\n        }\n    }\n\n    function handleHours(e,data){\n        props.handleprevHours(Number(data.value));\n    }\n    \n    return(\n        <Card>\n            <Label style={{'marginRight':'0px'}}>Previous GPA</Label>\n            <Input type='number' min='1' onChange={handlePrevGPA}/>\n            <Label style={{'marginRight':'0px','marginLeft':'0px'}}>Previous Completed Hours</Label>\n            <Input type='number' min='1' onChange={handleHours}/>\n        </Card>\n    );\n}\n\nconst SubjectList = (props) => {\n    const [subjects,setSubjects] = useState(props.subjects)\n\n    function createSubject(subject) {\n        const s = {\n                grade:  subject.grade||'',\n                checked: subject.checked || false,\n                key: uuid.v4(),\n            };\n        setSubjects([...subjects,s])\n    };\n    function handleChange(attrs){\n        let newSubjects = subjects.map((subject) => {\n                            if (subject.key === attrs.key) {\n                                return Object.assign({}, subject, {\n                                    grade: attrs.subjectGPA,\n                                    checked: attrs.checked,\n                                });\n                            } else {\n                                return subject;\n                            }\n                        })\n        setSubjects(newSubjects);\n    }\n    useEffect (()=>{\n        let data = calc()\n        data[0] = data[0]? data[0] : 0\n        data[1] = data[1]? data[1] : 0\n        props.onChange(data[0])\n        props.onHours(data[1])\n    })\n    function calc() {\n        let hours=0;\n        let score = 0;\n        subjects.map((subject) => {\n            let credit = (subject.checked)?2:3;\n            hours+=credit;\n            score+= (credit*subject.grade);\n        });\n        return [score/hours,hours];\n    }\n    function handleRemove (subId){\n        setSubjects(subjects.filter(s=> s.key !== subId));\n    }\n\n    const all = subjects.map((subject)=>(\n        <Subject\n            subjectGPA = {subject.grade}\n            checked = {subject.checked}\n            key = {subject.key}\n            id = {subject.key}\n            onSubjectChange = {handleChange}\n            onSubjectRemove = {handleRemove}\n        />\n    ));\n    return(\n        <div className=\"SubjectList\">\n            <div className=\"subjects\">\n                {all}\n            </div>\n            <div className=\"plusButton\">\n                <NewSubject\n                    onSubmit={createSubject}\n                />\n            </div>\n        </div>\n    );\n\n}\n\nconst grades = [\n    {value: '4.0', text:'A+'},\n    {value: '3.7', text:'A'},\n    {value: '3.4', text:'B+'},\n    {value: '3.1', text:'B'},\n    {value: '2.7', text:'C+'},\n    {value: '2.4', text:'C'},\n    {value: '2.1', text:'D+'},\n    {value: '2.0', text:'D'},\n    {value: '1.0', text:'F'},\n];\n\nclass Subject extends React.Component{\n    state = {\n        checked: false,\n        subjectGPA:'',\n        key:'',\n    };\n    componentDidMount=()=>{\n        this.setState({\n            checked: this.props.checked,\n            subjectGPA: this.props.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n\n    handleGradeChange =(e,{value}) =>{\n        this.setState({\n            checked: this.state.checked,\n            subjectGPA: value,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleCheck=()=>{\n        this.setState({\n            checked: (!this.state.checked),\n            subjectGPA: this.state.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleRemove=()=>{\n        this.props.onSubjectRemove(this.state.key);\n    }\n    render() {\n        return(\n            <>\n                <Card>\n                    <Checkbox\n                        label='2 Hour subject?'\n                        style={{padding:'10px'}}\n                        onClick={this.handleCheck}\n                        checked={this.state.checked}\n                    />\n                    <Dropdown\n                        placeholder='Grade'\n                        fluid\n                        selection\n                        options={grades}\n                        onChange={this.handleGradeChange}\n                        value={this.state.subjectGPA}\n                    />\n                    <Card.Content \n                        extra\n                    >\n                        <Button\n                            floated={'right'}\n                            icon={'trash'}\n                            color={'red'}\n                            inverted\n                            onClick={this.handleRemove}\n                        />\n                        Subject GPA : {this.state.subjectGPA}\n                        <br/>\n                        Hours : {(this.state.checked)?'2':'3'}\n                    </Card.Content>\n                </Card>\n                \n            </>\n        );\n    }\n}\n\nconst NewSubject = (props) =>{\n\n    function handleOpen (){\n        let subject ={\n            grade:'',\n            checked:false,\n            key:uuid.v4(),\n        }\n        props.onSubmit(subject);\n    };\n    return (\n        <Button\n            icon='plus'\n            onClick = {handleOpen}\n        />\n    );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App_function';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nvar uuid = require('uuid');\n\nlet subjects = [\n    {\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },\n]\n\nReactDOM.render(<App  subjects={subjects}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}