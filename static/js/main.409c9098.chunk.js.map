{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["uuid","require","Prev","props","Card","Label","style","Input","type","min","onChange","e","data","gpa","value","handlePrevGPA","handleprevHours","Number","SubjectList","useState","subjects","setSubjects","handleChange","attrs","newSubjects","map","subject","key","Object","assign","grade","subjectGPA","checked","handleRemove","subId","filter","s","useEffect","hours","score","credit","calc","onHours","all","id","onSubjectChange","onSubjectRemove","className","onSubmit","v4","grades","text","Subject","state","componentDidMount","setState","form","handleGradeChange","handleCheck","Checkbox","label","padding","onClick","this","Dropdown","placeholder","fluid","selection","options","Content","extra","Button","floated","icon","color","React","Component","NewSubject","App","deferredPrompt","setupButton","PrevGPA","setPrevGPA","PrevHours","setPrevHours","CurHours","setCurHours","Hours","setHours","CurTermGPA","setCurTermGPA","Cumulative","setCumulative","window","addEventListener","preventDefault","console","log","undefined","document","getElementById","display","disabled","Header","as","textAlign","dividing","toFixed","currentGPA","onclick","prompt","userChoice","then","choiceResult","outcome","paddingTop","Segment","href","rel","target","Icon","name","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.409c9098.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Label, Card, Icon, Segment, Dropdown, Checkbox, Header, Button, Input} from \"semantic-ui-react\";\nvar uuid = require('uuid');\n\nconst App = (props) =>{\n    const [PrevGPA, setPrevGPA] = useState(0);\n    const [PrevHours, setPrevHours] = useState(0);\n    const [CurHours, setCurHours] = useState(0);\n    const [Hours, setHours] = useState(0);\n    const [CurTermGPA, setCurTermGPA] = useState(0);\n    const [Cumulative, setCumulative] = useState(0);\n    \n    let deferredPrompt; // Allows to show the install prompt\n    let setupButton;\n\n    window.addEventListener('beforeinstallprompt', (e) => {\n        // Prevent Chrome 67 and earlier from automatically showing the prompt\n        e.preventDefault();\n        // Stash the event so it can be triggered later.\n        deferredPrompt = e;\n        console.log(\"beforeinstallprompt fired\");\n        if (setupButton == undefined) {\n            setupButton = document.getElementById(\"setup_button\");\n        }\n        // Show the setup button\n        setupButton.style.display = \"inline\";\n        setupButton.disabled = false;\n    });\n    function installApp() {\n        // Show the prompt\n        deferredPrompt.prompt();\n        setupButton.disabled = true;\n        // Wait for the user to respond to the prompt\n        deferredPrompt.userChoice\n            .then((choiceResult) => {\n                if (choiceResult.outcome === 'accepted') {\n                    console.log('PWA setup accepted');\n                    // hide our user interface that shows our A2HS button\n                    setupButton.style.display = 'none';\n                } else {\n                    console.log('PWA setup rejected');\n                }\n                deferredPrompt = null;\n            });\n    }\n    \n    useEffect(()=> {handleCumChange()});\n\n    function handlePrevGPA(PrevGPA) {\n        setPrevGPA(PrevGPA);\n    };\n\n    function handlePrevHours(PrevHours) {\n        setPrevHours(PrevHours);\n    };\n\n    function handleChange(currentGPA) {\n        setCurTermGPA(currentGPA);\n    };\n\n    function handleHours(hours) {\n        hours=Number(hours);\n        setCurHours(hours);\n        setHours(PrevHours+hours);\n    };\n\n    function handleCumChange() {\n        let prevgrade = PrevGPA * PrevHours;\n        let curgrade = CurTermGPA * CurHours;\n        setCumulative((prevgrade+curgrade)/Hours);\n    };\n    return (\n        <div className='ui main'>\n            <Header as='h1' textAlign='center'  style={{padding:'10px'}} dividing >\n                FCAIH GPA Calculator\n            </Header>\n            <Prev\n                handlePrevGPA = {handlePrevGPA}\n                handleprevHours = {handlePrevHours}\n            />\n            <div className=\"info\">\n                <b>Current Term GPA : {CurTermGPA?CurTermGPA.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Cumulative GPA : {Cumulative?Cumulative.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Hours : {Hours} </b>\n            </div>\n            <SubjectList\n                subjects = {props.subjects}\n                onChange = {handleChange}\n                onHours = {handleHours}\n            />\n            <button id=\"setup_button\" onclick={installApp}>Installer</button>\n            <footer style={{paddingTop:'30px'}}>\n                <Segment as='a' href={'http://github.com/ahmeed2m'} rel=\"noreferrer\" target=\"_blank\">\n                    Show some love on <Icon name='github'/>\n                </Segment>\n                <Segment as='a' href={'http://fb.com/ahmeed2m'} rel=\"noreferrer\" target=\"_blank\">\n                    Made By Mohamadeen\n                </Segment>\n            </footer>\n        </div>\n    );\n}\n\nconst Prev = (props) =>{\n    function handlePrevGPA(e,data){\n        let gpa=data.value\n        if(gpa>0){\n            props.handlePrevGPA(gpa);\n        }\n    }\n\n    function handleHours(e,data){\n        props.handleprevHours(Number(data.value));\n    }\n    \n    return(\n        <Card>\n            <Label style={{'marginRight':'0px'}}>Previous GPA</Label>\n            <Input type='number' min='1' onChange={handlePrevGPA}/>\n            <Label style={{'marginRight':'0px','marginLeft':'0px'}}>Previous Completed Hours</Label>\n            <Input type='number' min='1' onChange={handleHours}/>\n        </Card>\n    );\n}\n\nconst SubjectList = (props) => {\n    const [subjects,setSubjects] = useState(props.subjects)\n\n    function createSubject(subject) {\n        const s = {\n                grade:  subject.grade||'',\n                checked: subject.checked || false,\n                key: uuid.v4(),\n            };\n        setSubjects([...subjects,s])\n    };\n    function handleChange(attrs){\n        let newSubjects = subjects.map((subject) => {\n                            if (subject.key === attrs.key) {\n                                return Object.assign({}, subject, {\n                                    grade: attrs.subjectGPA,\n                                    checked: attrs.checked,\n                                });\n                            } else {\n                                return subject;\n                            }\n                        })\n        setSubjects(newSubjects);\n    }\n    useEffect (()=>{\n        let data = calc()\n        data[0] = data[0]? data[0] : 0\n        data[1] = data[1]? data[1] : 0\n        props.onChange(data[0])\n        props.onHours(data[1])\n    })\n    function calc() {\n        let hours=0;\n        let score = 0;\n        subjects.map((subject) => {\n            let credit = (subject.checked)?2:3;\n            hours+=credit;\n            score+= (credit*subject.grade);\n        });\n        return [score/hours,hours];\n    }\n    function handleRemove (subId){\n        setSubjects(subjects.filter(s=> s.key !== subId));\n    }\n\n    const all = subjects.map((subject)=>(\n        <Subject\n            subjectGPA = {subject.grade}\n            checked = {subject.checked}\n            key = {subject.key}\n            id = {subject.key}\n            onSubjectChange = {handleChange}\n            onSubjectRemove = {handleRemove}\n        />\n    ));\n    return(\n        <div className=\"SubjectList\">\n            <div className=\"subjects\">\n                {all}\n            </div>\n            <div className=\"plusButton\">\n                <NewSubject\n                    onSubmit={createSubject}\n                />\n            </div>\n        </div>\n    );\n\n}\n\nconst grades = [\n    {value: '4.0', text:'A+'},\n    {value: '3.7', text:'A'},\n    {value: '3.4', text:'B+'},\n    {value: '3.1', text:'B'},\n    {value: '2.7', text:'C+'},\n    {value: '2.4', text:'C'},\n    {value: '2.1', text:'D+'},\n    {value: '2.0', text:'D'},\n    {value: '1.0', text:'F'},\n];\n\nclass Subject extends React.Component{\n    state = {\n        checked: false,\n        subjectGPA:'',\n        key:'',\n    };\n    componentDidMount=()=>{\n        this.setState({\n            checked: this.props.checked,\n            subjectGPA: this.props.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n\n    handleGradeChange =(e,{value}) =>{\n        this.setState({\n            checked: this.state.checked,\n            subjectGPA: value,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleCheck=()=>{\n        this.setState({\n            checked: (!this.state.checked),\n            subjectGPA: this.state.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleRemove=()=>{\n        this.props.onSubjectRemove(this.state.key);\n    }\n    render() {\n        return(\n            <>\n                <Card>\n                    <Checkbox\n                        label='2 Hour subject?'\n                        style={{padding:'10px'}}\n                        onClick={this.handleCheck}\n                        checked={this.state.checked}\n                    />\n                    <Dropdown\n                        placeholder='Grade'\n                        fluid\n                        selection\n                        options={grades}\n                        onChange={this.handleGradeChange}\n                        value={this.state.subjectGPA}\n                    />\n                    <Card.Content \n                        extra\n                    >\n                        <Button\n                            floated={'right'}\n                            icon={'trash'}\n                            color={'red'}\n                            // inverted\n                            onClick={this.handleRemove}\n                            style={{padding:'10px'}}\n                        />\n                        Subject GPA : {this.state.subjectGPA}\n                        <br/>\n                        Hours : {(this.state.checked)?'2':'3'}\n                    </Card.Content>\n                </Card>\n                \n            </>\n        );\n    }\n}\n\nconst NewSubject = (props) =>{\n\n    function handleOpen (){\n        let subject ={\n            grade:'',\n            checked:false,\n            key:uuid.v4(),\n        }\n        props.onSubmit(subject);\n    };\n    return (\n        <Button\n            icon='plus'\n            onClick = {handleOpen}\n        />\n    );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\nvar uuid = require('uuid');\n\nlet subjects = [\n    {\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },\n]\n\nReactDOM.render(<App  subjects={subjects}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}