{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["uuid","require","Prev","props","Card","Label","id","style","Input","for","type","min","onChange","e","data","gpa","value","handlePrevGPA","handleprevHours","Number","SubjectList","useState","subjects","setSubjects","handleChange","attrs","newSubjects","map","subject","key","Object","assign","grade","subjectGPA","checked","handleRemove","subId","filter","s","useEffect","hours","score","credit","calc","onHours","all","CSSTransition","timeout","enter","exit","classNames","onSubjectChange","onSubjectRemove","className","TransitionGroup","onSubmit","v4","grades","text","Subject","state","componentDidMount","setState","form","handleGradeChange","handleCheck","Checkbox","label","padding","onClick","this","Dropdown","placeholder","fluid","selection","options","Content","extra","Button","aria-label","floated","icon","color","inverted","React","Component","NewSubject","App","PrevGPA","setPrevGPA","PrevHours","setPrevHours","CurHours","setCurHours","Hours","setHours","CurTermGPA","setCurTermGPA","Cumulative","setCumulative","Header","as","textAlign","dividing","toFixed","currentGPA","paddingTop","href","rel","target","Icon","name","size","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b24289a9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Label, Card, Icon, Dropdown, Checkbox, Header, Button, Input} from \"semantic-ui-react\";\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\nvar uuid = require('uuid');\n\nconst App = (props) =>{\n    const [PrevGPA, setPrevGPA] = useState(0);\n    const [PrevHours, setPrevHours] = useState(0);\n    const [CurHours, setCurHours] = useState(0);\n    const [Hours, setHours] = useState(0);\n    const [CurTermGPA, setCurTermGPA] = useState(0);\n    const [Cumulative, setCumulative] = useState(0);\n\n    useEffect(()=> {handleCumChange()});\n\n    function handlePrevGPA(PrevGPA) {\n        setPrevGPA(PrevGPA);\n    };\n\n    function handlePrevHours(PrevHours) {\n        setPrevHours(PrevHours);\n    };\n\n    function handleChange(currentGPA) {\n        setCurTermGPA(currentGPA);\n    };\n\n    function handleHours(hours) {\n        hours=Number(hours);\n        setCurHours(hours);\n        setHours(PrevHours+hours);\n    };\n\n    function handleCumChange() {\n        let prevgrade = PrevGPA * PrevHours;\n        let curgrade = CurTermGPA * CurHours;\n        setCumulative((prevgrade+curgrade)/Hours);\n    };\n    return (\n        <div className='ui main'>\n            <Header as='h1' textAlign='center'  style={{padding:'10px'}} dividing >\n                FCAIH GPA Calculator\n            </Header>\n            <Prev\n                handlePrevGPA = {handlePrevGPA}\n                handleprevHours = {handlePrevHours}\n            />\n            <div className=\"info\">\n                <b>Current Term GPA : {CurTermGPA?CurTermGPA.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Cumulative GPA : {Cumulative?Cumulative.toFixed(2):\"0.00\"} </b>\n                <br/>\n                <b>Hours : {Hours} </b>\n            </div>\n            <SubjectList\n                subjects = {props.subjects}\n                onChange = {handleChange}\n                onHours = {handleHours}\n            />\n            <footer style={{paddingTop:'30px'}} className='bla'>\n                <a as='a' href={'https://github.com/Ahmeed2m/helwan-gpa'} rel=\"noopener noreferrer\" target=\"_blank\">\n                    <Icon name='github' size='big' style={{'marginBottom':'9px'}}/>\n                </a>\n            </footer>\n        </div>\n    );\n}\n\nconst Prev = (props) =>{\n    function handlePrevGPA(e,data){\n        let gpa=data.value\n        if(gpa>0){\n            props.handlePrevGPA(gpa);\n        }\n    }\n\n    function handleHours(e,data){\n        props.handleprevHours(Number(data.value));\n    }\n    \n    return(\n        <Card>\n            <Label id=\"prev-gpa\" style={{'marginRight':'0px'}}>Previous GPA</Label>\n            <Input for=\"prev-gpa\" type='number' min='1' onChange={handlePrevGPA}/>\n            <Label id=\"prev-hours\" style={{'marginRight':'0px','marginLeft':'0px'}}>Previous Completed Hours</Label>\n            <Input for=\"prev-hours\" type='number' min='1' onChange={handleHours}/>\n        </Card>\n    );\n}\n\nconst SubjectList = (props) => {\n    const [subjects,setSubjects] = useState(props.subjects)\n\n    function createSubject(subject) {\n        const s = {\n                grade:  subject.grade||'',\n                checked: subject.checked || false,\n                key: uuid.v4(),\n            };\n        setSubjects([...subjects,s])\n    };\n    function handleChange(attrs){\n        let newSubjects = subjects.map((subject) => {\n                            if (subject.key === attrs.key) {\n                                return Object.assign({}, subject, {\n                                    grade: attrs.subjectGPA,\n                                    checked: attrs.checked,\n                                });\n                            } else {\n                                return subject;\n                            }\n                        })\n        setSubjects(newSubjects);\n    }\n    useEffect (()=>{\n        let data = calc()\n        data[0] = data[0]? data[0] : 0\n        data[1] = data[1]? data[1] : 0\n        props.onChange(data[0])\n        props.onHours(data[1])\n    })\n    function calc() {\n        let hours=0;\n        let score = 0;\n        subjects.map((subject) => {\n            let credit = (subject.checked)?2:3;\n            hours+=credit;\n            score+= (credit*subject.grade);\n        });\n        return [score/hours,hours];\n    }\n    function handleRemove (subId){\n        setSubjects(subjects.filter(s=> s.key !== subId));\n    }\n\n    const all = subjects.map((subject)=>(\n        <CSSTransition\n                    key={subject.key}\n                    timeout={{\n                        enter: 500,\n                        exit: 50,\n                    }}\n                    classNames=\"move\"\n        >\n        <Subject\n            subjectGPA = {subject.grade}\n            checked = {subject.checked}\n            key = {subject.key}\n            id = {subject.key}\n            onSubjectChange = {handleChange}\n            onSubjectRemove = {handleRemove}\n        />\n        </CSSTransition>\n    ));\n    return(\n        <div className=\"SubjectList\">\n            <TransitionGroup className={\"subject-list\"&&\"subjects\"} >     \n            {all}\n            </TransitionGroup>\n            <div className=\"plusButton\">\n                <NewSubject\n                    onSubmit={createSubject}\n                />\n            </div>\n        </div>\n    );\n\n}\n\nconst grades = [\n    {value: '4.0', text:'A+'},\n    {value: '3.75', text:'A'},\n    {value: '3.4', text:'B+'},\n    {value: '3.1', text:'B'},\n    {value: '2.8', text:'C+'},\n    {value: '2.5', text:'C'},\n    {value: '2.25', text:'D+'},\n    {value: '2.0', text:'D'},\n    {value: '1.0', text:'F'},\n];\n\nclass Subject extends React.Component{\n    state = {\n        checked: false,\n        subjectGPA:'',\n        key:'',\n    };\n    componentDidMount=()=>{\n        this.setState({\n            checked: this.props.checked,\n            subjectGPA: this.props.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n\n    handleGradeChange =(e,{value}) =>{\n        this.setState({\n            checked: this.state.checked,\n            subjectGPA: value,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleCheck=()=>{\n        this.setState({\n            checked: (!this.state.checked),\n            subjectGPA: this.state.subjectGPA,\n            key:this.props.id,\n        }, () => { if (!this.props.form)\n            this.props.onSubjectChange(this.state); });\n    };\n    handleRemove=()=>{\n        this.props.onSubjectRemove(this.state.key);\n    }\n    render() {\n        return(\n            <Card>\n                <Checkbox\n                    label='2 Hour subject?'\n                    style={{padding:'10px'}}\n                    onClick={this.handleCheck}\n                    checked={this.state.checked}\n                />\n                <Dropdown\n                    placeholder='Grade'\n                    fluid\n                    selection\n                    options={grades}\n                    onChange={this.handleGradeChange}\n                    value={this.state.subjectGPA}\n                />\n                <Card.Content \n                    extra\n                >\n                    <Button\n                        aria-label=\"remove subject\"\n                        floated={'right'}\n                        icon={'trash'}\n                        color={'red'}\n                        inverted\n                        onClick={this.handleRemove}\n                        style={{padding:'10px'}}\n                    />\n                    Subject GPA : {this.state.subjectGPA}\n                    <br/>\n                    Hours : {(this.state.checked)?'2':'3'}\n                </Card.Content>\n            </Card> \n        );\n    }\n}\n\nconst NewSubject = (props) =>{\n\n    function handleOpen (){\n        let subject ={\n            grade:'',\n            checked:false,\n            key:uuid.v4(),\n        }\n        props.onSubmit(subject);\n    };\n    return (\n        <Button\n            icon='plus'\n            aria-label=\"add subject\"\n            onClick = {handleOpen}\n        />\n    );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nvar uuid = require('uuid');\n\nlet subjects = [\n    {\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },{\n        grade:'',\n        checked:false,\n        key: uuid.v4(),\n    },\n]\n\nReactDOM.render(<App  subjects={subjects}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}